function useTodoDelete({ action, todos }) {
  // ‚ú® Event handler - –≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏—Ç —Å–≤–µ–∂–∏–µ props, –Ω–æ –Ω–µ reactive
  const onDelete = useEffectEvent(async (id: string, todo: Todo) => {
    const pending = pendingDeletions.current.get(id);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–¥ delete - restorable –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è!
    if (!pending?.restorable) {
      console.log('Deletion cancelled, skipping');
      return; // üéØ –ù–µ —É–¥–∞–ª—è–µ–º, –µ—Å–ª–∏ –±—ã–ª Undo
    }

    const result = await action(id);
    // ... handle result
  });

  function handleTodoDelete(todo: Todo) {
    // Schedule deletion
    const timerId = setTimeout(() => {
      onDelete(todo.id, todo); // ‚úÖ –í—Å–µ–≥–¥–∞ –≤–∏–¥–∏—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π restorable
    }, 5000);

    pendingDeletions.current.set(todo.id, {
      timerId,
      restorable: true,
    });
  }
}
